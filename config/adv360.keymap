
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
      &kp EQUAL       &kp N1    &kp N2    &kp N3     &kp N4  &kp N5                             &tog 0                                                                          &mo 2  &kp N6  &kp N7     &kp N8    &kp N9           &kp N0        &kp MINUS
        &kp TAB        &kp Q     &kp W     &kp E      &kp R   &kp T            &mt RC(RS(V)) RC(RS(C))                                                                          &none   &kp Y   &kp U      &kp I     &kp O            &kp P         &kp BSLH
  &sk LEFT_META        &kp A     &kp S     &kp D      &kp F   &kp G                      &kp RG(SPACE)  &kp LCTRL  &kp LALT                  &kp LEFT_META  &kp ESCAPE  &kp RG(ENTER)   &kp H   &kp J      &kp K     &kp L         &kp SEMI          &kp SQT
 &sk LEFT_SHIFT  &mt LCTRL Z     &kp X     &kp C      &kp V   &kp B                                                &kp HOME                      &kp PG_UP                              &kp N   &kp M  &kp COMMA   &kp DOT  &mt RCTRL SLASH  &sk RIGHT_SHIFT
          &mo 3    &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                              &kp BACKSPACE  &kp SPACE   &kp END                      &kp PG_DN   &kp ENTER     &kp DELETE          &kp UP   &kp DOWN  &kp LBKT         &kp RBKT            &mo 1
            >;
        };

        layer_keypad_symbols {
            bindings = <
 &kp EQUAL             &kp F1           &kp F2                &kp F3                 &kp F4        &kp F5                            &tog 0                                                                 &mo 3  &kp F6  &kp F7    &kp F8      &kp F9       &kp F10    &kp F11
   &kp TAB        &kp PERCENT    &kp AMPERSAND        &kp LEFT_BRACE        &kp RIGHT_BRACE  &kp ASTERISK                   &kp PRINTSCREEN                                                                 &none   &kp Y  &kp N7    &kp N8      &kp N9  &kp KP_MINUS    &kp F12
   &kp ESC         &kp DOLLAR  &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp POUND            &macro_macro_screensht  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H  &kp N4    &kp N5      &kp N6   &kp KP_PLUS    &kp SQT
 &kp LSHFT  &kp DOUBLE_QUOTES   &kp APOSTROPHE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET     &kp GRAVE                                               &kp HOME                  &kp PG_UP                         &kp N  &kp N1    &kp N2      &kp N3  &kp KP_ENTER  &kp RSHFT
     &mo 2          &kp GRAVE         &kp CAPS              &kp LEFT              &kp RIGHT                                        &kp BSPC    &kp DEL   &kp END                  &kp PG_DN  &kp ENTER  &kp KP_N0          &kp UP  &kp DOWN  &kp KP_DOT      &kp RBKT      &mo 2
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none    &macro_ver         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_navigation {
            bindings = <
 &trans  &kp RG(RS(NUMBER_1))  &kp RG(RS(NUMBER_2))  &kp RG(RS(NUMBER_3))  &kp RG(RS(NUMBER_4))  &kp RG(RS(NUMBER_5))            &trans                                                  &trans  &kp RG(RS(NUMBER_6))  &kp RG(RS(NUMBER_7))  &kp RG(RS(NUMBER_8))  &kp RG(RS(NUMBER_9))  &trans  &trans
 &trans                &trans             &kp K_CUT            &kp K_COPY           &kp K_PASTE                &trans            &trans                                                   &to 0              &kp HOME             &kp PG_UP             &kp PG_DN               &kp END  &trans  &trans
 &trans              &kp LGUI          &kp LEFT_ALT      &kp LEFT_CONTROL            &kp LSHIFT                &trans            &trans  &trans  &trans                  &trans  &trans  &trans              &kp LEFT                &kp UP              &kp DOWN             &kp RIGHT  &trans  &trans
 &trans                &trans                &trans                &trans             &kp COLON                &trans                            &trans                  &trans                               &kp TAB                &trans                &trans                &trans  &trans  &trans
 &trans                &trans                &trans                &trans                &trans                                  &trans  &trans  &trans                  &trans  &trans  &trans                                      &trans                &trans                &trans  &trans  &trans
            >;
        };

    };
};
