
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
  &none  &kp N1          &kp N2              &kp N3            &kp N4           &kp N5                             &tog 0                                                                                             &mo 2            &kp N6             &kp N7               &kp N8           &kp N9     &kp N0   &none
  &none   &kp Q           &kp W               &kp E             &kp R            &kp T            &mt RC(RS(V)) RC(RS(C))                                                                                             &none             &kp Y              &kp U                &kp I            &kp O      &kp P   &none
  &none   &kp A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &mt LEFT_META G                      &kp RG(SPACE)    &kp LCTRL  &kp LG(LEFT_SHIFT)                  &kp LEFT_META  &kp RIGHT_CONTROL  &kp RG(ENTER)  &mt RIGHT_META H  &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT O   &kp SEMI   &none
  &none   &kp Z           &kp X               &kp C             &kp V            &kp B                                                            &kp HOME                      &kp PG_UP                                               &kp N              &kp M            &kp COMMA          &kp DOT  &kp SLASH   &none
  &none   &none           &none               &none             &none                                     &lt 3 BACKSPACE  &lt 1 SPACE             &kp END                      &kp PG_DN        &lt 4 ENTER     &kp ESCAPE                                &none                &none            &none      &none   &none
            >;
        };

        layer_navigation {
            bindings = <
  &none  &kp LG(LS(NUMBER_1))    &kp LG(LS(N2))  &kp LG(LS(NUMBER_3))  &kp LG(LS(NUMBER_4))  &kp LG(LS(NUMBER_5))            &trans                                                   &none     &none          &none      &none      &none   &none   &none
  &none      &kp LG(NUMBER_1)  &kp LG(NUMBER_2)      &kp LG(NUMBER_3)      &kp LG(NUMBER_4)      &kp LG(NUMBER_5)             &none                                                   &none  &kp HOME  &kp PAGE_DOWN  &kp PG_UP    &kp END   &none   &none
  &none                 &none      &kp LEFT_ALT      &kp LEFT_CONTROL        &kp LEFT_SHIFT         &kp LEFT_META             &none  &trans  &trans                  &trans  &trans   &none  &kp LEFT       &kp DOWN     &kp UP  &kp RIGHT   &none   &none
  &none                 &none             &none                 &none                 &none                 &none                            &trans                  &trans                     &kp H          &kp J      &kp K      &kp L   &none   &none
  &none                 &none             &none                 &none                 &none                                  &trans  &trans  &trans                  &trans  &trans  &trans                    &none      &none      &none   &none   &none
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                 &trans                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                  &none   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                  &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

        layer_numbers {
            bindings = <
  &none  &kp F1        &kp F2            &kp F3      &kp F4         &kp F5            &trans                                                         &none            &kp F6        &kp F7        &kp F8        &kp F9            &kp F10  &kp F11
  &none   &none         &none             &none       &none          &none             &none                                                         &none  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET  &kp F12
  &none   &none  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LSHIFT  &kp LEFT_META             &none  &trans  &trans                  &trans     &trans      &none         &kp COLON  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6          &kp EQUAL    &none
  &none   &none         &none             &none       &none          &none                            &trans                  &trans                            &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3          &kp SLASH    &none
  &none   &none         &none             &none       &none                           &trans  &trans  &trans                  &trans  &kp ENTER  &kp EQUAL                         &kp DOT         &none         &none              &none    &none
            >;
        };

        layer_Symbols {
            bindings = <
 &trans     &trans         &trans         &trans                &trans                 &trans               &trans                                                     &trans         &trans          &trans            &trans        &trans  &trans  &trans
 &trans  &kp GRAVE  &kp SEMICOLON  &kp BACKSLASH      &kp LEFT_BRACKET      &kp RIGHT_BRACKET               &trans                                                     &trans         &trans          &trans            &trans        &trans  &trans  &trans
 &trans   &kp EXCL         &kp AT      &kp POUND            &kp DOLLAR            &kp PERCENT               &trans     &trans  &trans                  &trans  &trans  &trans  &kp LEFT_META  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp LEFT_ALT  &trans  &trans
 &trans  &kp CARET  &kp AMPERSAND       &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                                  &trans                  &trans                         &trans          &trans            &trans        &trans  &trans  &trans
 &trans     &trans         &trans         &trans                &trans                                   &kp MINUS  &kp EQUAL  &trans                  &trans  &trans  &trans                         &trans            &trans        &trans  &trans  &trans
            >;
        };

        layer_MOD {
            bindings = <
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
